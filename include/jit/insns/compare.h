// O1 = (O2 <  O3)
INSN (void, ltr_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltr_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltr_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltr_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltr_p, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 <  O3)
INSN (void, lti_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lti_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lti_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lti_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lti_p, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 <= O3)
INSN (void, ler_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ler_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ler_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ler_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ler_p, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ler_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ler_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 <= O3)
INSN (void, lei_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lei_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lei_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lei_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, lei_p, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 >  O3)
INSN (void, gtr_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gtr_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gtr_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gtr_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gtr_p, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gtr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gtr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 >  O3)
INSN (void, gti_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gti_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gti_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gti_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gti_p, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 >= O3)
INSN (void, ger_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ger_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ger_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ger_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ger_p, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ger_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ger_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 >= O3)
INSN (void, gei_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gei_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gei_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gei_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, gei_p, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 == O3)
INSN (void, eqr_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqr_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqr_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqr_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqr_p, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 == O3)
INSN (void, eqi_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqi_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqi_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqi_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, eqi_p, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 != O3)
INSN (void, ner_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ner_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ner_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ner_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ner_p, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ner_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ner_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = (O2 != O3)
INSN (void, nei_i, (reg32 d, reg32 s1, reg32 s2))
INSN (void, nei_ui, (reg32 d, reg32 s1, reg32 s2))
INSN (void, nei_l, (reg32 d, reg32 s1, reg32 s2))
INSN (void, nei_ul, (reg32 d, reg32 s1, reg32 s2))
INSN (void, nei_p, (reg32 d, reg32 s1, reg32 s2))

// O1 = !(O2 >= O3)
INSN (void, unltr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, unltr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = !(O2 >  O3)
INSN (void, unler_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, unler_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = !(O2 <= O3)
INSN (void, ungtr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ungtr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = !(O2 <  O3)
INSN (void, unger_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, unger_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = !(O2 <  O3) && !(O2 >  O3)
INSN (void, uneqr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, uneqr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 = !(O2 >= O3) || !(O2 <= O3)
INSN (void, ltgtr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ltgtr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 =  (O2 == O2) &&  (O3 == O3)
INSN (void, ordr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, ordr_d, (reg32 d, reg32 s1, reg32 s2))

// O1 =  (O2 != O2) ||  (O3 != O3)
INSN (void, unordr_f, (reg32 d, reg32 s1, reg32 s2))
INSN (void, unordr_d, (reg32 d, reg32 s1, reg32 s2))
